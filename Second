local drophat = true

workspace.FallenPartsDestroyHeight = -0/0
spawn(function()
    local noclip = false
    char = game.Players.LocalPlayer.Character["PirateCaptain_HatAccessory"]
    while game:service("RunService").Stepped:wait() do
        if noclip == true then
            for _,v in pairs(char:children()) do
                pcall(function() 
                    if v.className == "Part" then 
                        v.CanCollide = false 
                    end 
                end) 
            end 
        end 
    end
end)
--noclip hat
local player = game.Players.LocalPlayer.Character
local hum = player.Humanoid
local hat = player["PirateCaptain_HatAccessory"]

local atts = {
    "BodyProportionScale",
    "BodyWidthScale",
    "BodyHeightScale",
    "BodyDepthScale",
    "HeadScale",
    "BodyTypeScale"
}

local function rem()
    hat.Handle:WaitForChild("OriginalSize"):Destroy()
end

for i,v in pairs(atts) do
    rem()
    hum[v]:Destroy()
end

-- hat.Handle.OriginalSize:Destroy()
-- hum.BodyProportionScale:Destroy()
-- wait(0.4)
-- hat.Handle.OriginalSize:Destroy()
-- hum.BodyWidthScale:Destroy()
-- wait(0.4)
-- hat.Handle.OriginalSize:Destroy()
-- hum.BodyHeightScale:Destroy()
-- wait(0.4)
-- hat.Handle.OriginalSize:Destroy()
-- hum.BodyDepthScale:Destroy()
-- wait(0.4)
-- hat.Handle.OriginalSize:Destroy()
-- hum.HeadScale:Destroy()
-- wait(0.4)
-- hat.Handle.OriginalSize:Destroy()
-- hum.BodyTypeScale:Destroy()
wait(.2)
if drophat then
local old = player.HumanoidRootPart.CFrame
local c = player.Humanoid:Clone()
player.Humanoid:Destroy()
c.Parent = player
end
